@model WebsiteThuCungBento.Models.KhachHang

@{
    ViewBag.Title = "Tạo mới khách hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>TẠO MỚI KHÁCH HÀNG</h2>

@using (Html.BeginForm("Create", "KhachHang", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label><strong>Họ Tên:</strong></label>
            @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label><strong>Số Điện Thoại:</strong></label>
            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
            <div class="col-md-10" onkeypress="return isNumberKey(event)">
                <input class="input-validation-error input-full" Required = "required" htmlattributes="{ class = form-control }" id="SDT" name="SDT" type="text" onkeypress="return isNumberKey(event)">
            </div>
        </div>
        <div class="form-group">
            <label><strong>Tên Đăng Nhập:</strong></label>
            @Html.ValidationMessageFor(model => model.TenDN, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required" htmlattributes="{ class = form-control }" id="TenDN" name="TenDN" type="text" value="">
            </div>
        </div>
        <div class="form-group">
            <label><strong>Mật khẩu:</strong></label>
            @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required"  htmlattributes="{ class = form-control }" id="MatKhau" name="MatKhau" type="password">
            </div>
        </div>
        <div class="form-group">
            <label><strong>Email:</strong></label>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-validation-error input-full" Required = "required" htmlattributes="{ class = form-control }" id="Email" name="Email" type="Email">
            </div>
        </div>
        <div class="form-group">
            <label><strong>Ngày Sinh:</strong></label>
            @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required" htmlattributes="{ class = form-control }" id="NgaySinh" name="NgaySinh" type="date">
            </div>
        </div>
        <div class="form-group">
            <label><strong>Hình Ảnh:</strong></label>
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required" htmlattributes="{ class = form-control }" id="fileUpload" type="file" name="fileUpload" accept="image/jpeg,image/jpg,image/png" >
            </div>
        </div>
        <div class="form-group">
            <label><strong>Địa chỉ:</strong></label>
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo mới" class="btn btn-default" /> |
                @Html.ActionLink("Quay lại trang quản lý", "Index")
            </div>
        </div>
    </div>
}

<script language='javascript'>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>