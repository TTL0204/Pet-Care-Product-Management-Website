@model WebsiteThuCungBento.Models.KhachHang

@{
    ViewBag.Title = "Trang chỉnh sửa thông tin khách hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>TRANG CHỈNH SỬA THÔNG TIN KHÁCH HÀNG</h2>

@using (Html.BeginForm("Edit", "KhachHang", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label><strong>Họ Tên:</strong></label>
            @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label><strong>Số Điện Thoại:</strong></label>
            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
            <div class="col-md-10" onkeypress="return isNumberKey(event)">
                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label><strong>Email:</strong></label>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>       
        <div class="form-group">
            <label><strong>Hình Ảnh:</strong></label>
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <img src="~/img/@Model.HinhAnh" height="100" width="100"/> |
                <input class="form-control text-box single-line" Required = "required" id="fileUpload" name="fileUpload" type="file">
            </div>
        </div>
        <div class="form-group">
            <label><strong>Ngày Sinh:</strong></label>
            @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>
        <div class="form-group">
            <label><strong>Địa Chỉ:</strong></label>
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cập nhật" class="btn btn-default" /> |
                @Html.ActionLink("Quay lại trang quản lý", "Index")
            </div>
        </div>
    </div>
}

<script language='javascript'>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>